{"dependencies":[{"name":"react"},{"name":"react-dom"},{"name":"./airplane"}],"generated":{"js":"\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _airplane = require(\"./airplane\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction displayFuelCapacity() {\n  _airplane.availableBoards.forEach(function (element) {\n    console.log('Price ' + element.name + ': ' + element['price']);\n  });\n}\ndisplayFuelCapacity();\n\nvar SurfBoards = function (_React$Component) {\n  _inherits(SurfBoards, _React$Component);\n\n  function SurfBoards(props) {\n    _classCallCheck(this, SurfBoards);\n\n    var _this = _possibleConstructorReturn(this, (SurfBoards.__proto__ || Object.getPrototypeOf(SurfBoards)).call(this, props));\n\n    _this.state = {\n      boards: [{ name: 'Bonzer', price: 1000, waveSize: 7 }, { name: 'Black Beauty', price: 1200, waveSize: 10 }, { name: 'RocketNine', price: 1200, waveSize: 10 }]\n    };\n    return _this;\n  }\n\n  _createClass(SurfBoards, [{\n    key: \"render\",\n    value: function render() {\n      var boards = this.state.boards;\n\n      return boards.map(function (board) {\n        {/* This is a react comment */}\n        {/* Need to set a react key when rendering an array of items */}\n        return _react2.default.createElement(\n          \"div\",\n          { key: board.name },\n          _react2.default.createElement(\n            \"h1\",\n            null,\n            board.name\n          ),\n          _react2.default.createElement(\n            \"ol\",\n            null,\n            _react2.default.createElement(\n              \"li\",\n              null,\n              \"Price \" + board.price\n            ),\n            _react2.default.createElement(\n              \"li\",\n              null,\n              \"Size \" + board.waveSize\n            )\n          )\n        );\n      });\n    }\n  }]);\n\n  return SurfBoards;\n}(_react2.default.Component);\n\n_reactDom2.default.render(_react2.default.createElement(SurfBoards, null), document.getElementById('root'));"},"hash":"1e1a035b7c4e71706eb00e7fe7328b69"}